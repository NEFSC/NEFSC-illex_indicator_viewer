; $ID:	ILLEX_VIEWER_IMAGE.PRO,	2023-09-19-09,	USER-KJWH	$
  FUNCTION ILLEX_VIEWER_IMAGE, VERSTR, FILE=FILE, DATERANGE=DATERANGE,MAPP=MAPP, BUFFER=BUFFER, CURRENT=CURRENT, $
                               ADD_BATHY=ADD_BATHY, BATHY_DEPTH=BATHY_DEPTH, BATHY_COLOR=BATHY_COLOR, BATHY_THICK=BATHY_THICK, $
                               ADD_POINTS=ADD_POINTS, PLONS=PLONS, PLATS=PLATS, PSYM=PSYM, PCOLOR=PCOLOR, PSIZE=PSIZE, $
                               OUTLINE=OUTLINE, OUT_COLOR=OUT_COLOR, OUT_THICK=OUT_THICK, $
                               ADD_LONLAT=ADD_LONLAT, LONS=LONS, LATS=LATS, LL_COLOR=LL_COLOR, LL_THICK=LL_THICK, $
                               ADD_CONTOURS=ADD_CONTOURS, CONTOURS=CONTOURS, ADD_TITLE=ADD_TITLE, TITLE_TEXT=TITLE_TEXT, TITLE_POS=TITLE_POS,$
                               RESIZE=RESIZE, ADD_BOARDER=ADD_BOARDER, ADD_COLORBAR=ADD_COLORBAR, ADD_DATEBAR=ADD_DATEBAR, ADD_PIONEER=ADD_PIONEER,$
                               PROD_SCALE=PROD_SCALE, CBTITLE=CBTITLE, SCLR=SCLR, SPAL=SPAL,  _EXTRA=EXTRA
                               

;+
; NAME:
;   ILLEX_VIEWER_IMAGE
;
; PURPOSE:
;   This function will return an image to be used in the composites and annimations for the Weekly Illex website
;
; PROJECT:
;   illex_indicator_viewer
;
; CALLING SEQUENCE:
;   Result = ILLEX_VIEWER_IMAGE($Parameter1$, $Parameter2$, $Keyword=Keyword$, ...)
;
; REQUIRED INPUTS:
;   Parm1.......... Describe the positional input parameters here. 
;
; OPTIONAL INPUTS:
;   Parm2.......... Describe optional inputs here. If none, delete this section.
;
; KEYWORD PARAMETERS:
;   KEY1........... Document keyword parameters like this. Note that the keyword is shown in ALL CAPS!
;
; OUTPUTS:
;   OUTPUT.......... Describe the output of this program or function
;
; OPTIONAL OUTPUTS:
;   None
;
; COMMON BLOCKS: 
;   None
;
; SIDE EFFECTS:  
;   None
;
; RESTRICTIONS:  
;   None
;
; EXAMPLE:
; 
;
; NOTES:
;   $Citations or any other useful notes$
;   
; COPYRIGHT: 
; Copyright (C) 2022, Department of Commerce, National Oceanic and Atmospheric Administration, National Marine Fisheries Service,
;   Northeast Fisheries Science Center, Narragansett Laboratory.
;   This software may be used, copied, or redistributed as long as it is not sold and this copyright notice is reproduced on each copy made.
;   This routine is provided AS IS without any express or implied warranties whatsoever.
;
; AUTHOR:
;   This program was written on June 02, 2022 by Kimberly J. W. Hyde, Northeast Fisheries Science Center | NOAA Fisheries | U.S. Department of Commerce, 28 Tarzwell Dr, Narragansett, RI 02882
;    
; MODIFICATION HISTORY:
;   Jun 02, 2022 - KJWH: Initial code written
;-
; ****************************************************************************************************
  ROUTINE_NAME = 'ILLEX_VIEWER_IMAGE'
  COMPILE_OPT IDL2
  SL = PATH_SEP()

  FP = PARSE_IT(FILE,/ALL)
  IF HAS(FP.L2SUB,'STACKED') THEN STACKED = 1 ELSE STACKED = 0
  PROD = FP.PROD
  PSTR = VERSTR.PROD_INFO.(WHERE(TAG_NAMES(VERSTR.PROD_INFO) EQ PROD))

  TYPE = FP.MATH
  PER = PERIOD_2STRUCT(FP.PERIOD)
  
  IF ~N_ELEMENTS(BATHY)  THEN BATHY = 200 
  IF ~N_ELEMENTS(OUT_COLOR) THEN OCOLOR = 250
  IF ~N_ELEMENTS(OUT_THICK) THEN OTHICK = 3
  IF ~N_ELEMENTS(MAPP)   THEN MP = VERSTR.INFO.MAP_OUT ELSE MP = MAPP
  IF ~N_ELEMENTS(TITLE_POS) THEN TITLE_POS = [0.5,0.96]
  
  MR = MAPS_READ(MP)
  MR_DIMS = FLOAT(STRSPLIT(MR.IMG_DIMS,';',/EXTRACT))
  XX = MR_DIMS[0]/MR.PX & YY = MR_DIMS[1]/MR.PY
  
  IF KEYWORD_SET(ADD_LONLAT) THEN BEGIN
    IF ~N_ELEMENTS(LONS)   THEN LONS = [-76,-72,-68,-64] & LONNAMES = REPLICATE('',N_ELEMENTS(LONS))
    IF ~N_ELEMENTS(LATS)   THEN LATS = [ 36, 40, 44]     & LATNAMES = REPLICATE('',N_ELEMENTS(LATS))
    IF ~N_ELEMENTS(C_COLOR) THEN LL_COLOR = 254
    IF ~N_ELEMENTS(C_THICK) THEN LL_THICK = 3
    MLL = MAPS_2LONLAT(MP)
  ENDIF 
    
  IF KEYWORD_SET(ADD_PIONEER) THEN BEGIN
    PIONEER = VERSTR.DIRS.DIR_FILES + 'PIONEER_ARRAY_COORDINATES.csv'
    PDATA = CSV_READ(PIONEER)
    MAPS_SET, MP
    LL = MAP_DEG2IMAGE(MAPS_BLANK(MP),PDATA.LON,PDATA.LAT,X=X,Y=Y)
    ZWIN 
  ENDIF  
  
  IF KEYWORD_SET(ADD_CONTOURS) OR N_ELEMENTS(CONTOURS) GT 0 THEN BEGIN
    IF ~N_ELEMENTS(CONTOURS) THEN BEGIN
      CASE PROD OF 
        'SST': C_LEVELS = [12,16,20,24,28,32]
        'CHLOR_A': C_LEVELS = [0.0]
      ENDCASE
    ENDIF ELSE C_LEVELS = CONTOURS
    IF ~N_ELEMENTS(C_COLOR) THEN C_COLOR = 249
    IF ~N_ELEMENTS(C_THICK) THEN C_THICK = 4
    IF ~N_ELEMENTS(C_ANNOTATION) THEN C_ANNOTATION = REPLICATE(' ',N_ELEMENTS(C_LEVELS))
  ENDIF ELSE C_LEVELS = []
    
  PSCL = PSTR.PROD_SCALE
  PAL  = PSTR.PAL
  CBTITLE = UNITS(PROD)
  
  CASE PROD OF
    'CHLOR_A': BEGIN 
      CASE TYPE OF
        'ANOM': BEGIN & SCLR='NAVY'   & PSCL=PSTR.ANOM_SCALE & PAL=PSTR.ANOM_PAL & CBTITLE=PSTR.ANOM_TITLE & END 
        'STATS': BEGIN & SCLR='TOMATO' & END
         ELSE:   BEGIN & SCLR='TOMATO' & END
      ENDCASE
    END           
    'SST': BEGIN
      CASE TYPE OF
        'ANOM': BEGIN & SCLR = 'NAVY'   & PSCL = PSTR.ANOM_SCALE & PAL=PSTR.ANOM_PAL & CBTITLE=PSTR.ANOM_TITLE & END
        'STATS': BEGIN & SCLR = 'YELLOW' & PSCL = PSTR.MONTH_SCALE.(WHERE(TAG_NAMES(PSTR.MONTH_SCALE) EQ 'M'+PER.MONTH_START)) & END
         ELSE:   BEGIN & SCLR = 'YELLOW' & IF HAS(PSTR,'MONTH_SCALE') THEN PSCL = PSTR.MONTH_SCALE.(WHERE(TAG_NAMES(PSTR.MONTH_SCALE) EQ 'M'+PER.MONTH_START)) ELSE PSCALE=PSTR.PROD_SCALE & END         
      ENDCASE
    END
    'GRAD_CHL': SCLR='NAVY'    
    'GRAD_SST': SCLR='TOMATO' 
  ENDCASE
  
  IF N_ELEMENTS(PROD_SCALE) EQ 1 THEN PSCL=PROD_SCALE 
  IF N_ELEMENTS(SPAL) EQ 1 THEN PAL=PAL
  
  IF KEYWORD_SET(STACKED) THEN BEGIN
    STACKED_2PNGS, FILE, OUTIMG=IMG, MAP_OUT=MP, PAL=PAL, SPROD=PSCL, ADD_BATHY=BATHY, OUTLINE=OUTLINE, OUT_COLOR=OUT_COLOR, OUT_THICK=OUT_THICK,$
      C_LEVELS=C_LEVELS,C_COLOR=C_COLOR,C_THICK=C_THICK,CB_TICKVALUES=CB_TICKVALUES,C_ANNOTATION=C_ANNOTATION, $
      ADD_LONLAT=ADD_LONLAT,LL_COLOR=LL_COLOR,LL_THICK=LL_THICK,LONS=LONS,LATS=LATS,LONNAMES=LONNAMES,LATNAMES=LATNAMES,$
      BUFFER=BUFFER, /NO_SAVE, CURRENT=CURRENT, DATERANGE=DATERANGE, _EXTRA=EXTRA
  ENDIF ELSE PRODS_2PNG, FILE, OBJ=IMG, MAPP=MP, PAL=PAL, SPROD=PSCL, ADD_BATHY=BATHY, OUTLINE=OUTLINE, OUT_COLOR=OUT_COLOR, OUT_THICK=OUT_THICK, $
              C_LEVELS=C_LEVELS,C_COLOR=C_COLOR,C_THICK=C_THICK,CB_TICKVALUES=CB_TICKVALUES,C_ANNOTATION=C_ANNOTATION, $
              ADD_LONLAT=ADD_LONLAT,LL_COLOR=LL_COLOR,LL_THICK=LL_THICK,LONS=LONS,LATS=LATS,LONNAMES=LONNAMES,LATNAMES=LATNAMES,$
              BUFFER=BUFFER, /NO_SAVE, CURRENT=CURRENT, _EXTRA=EXTRA
            
  IF IMG EQ [] THEN GOTO, DONE
  IF KEYWORD_SET(RESIZE) THEN IMG.SCALE,RESIZE,RESIZE
  POS = IMG.POSITION
  PIXBL = IMG.CONVERTCOORD(0.075,0.075,/TO_DEVICE) ; Get the coordinates of the bottom left pixel


  BX = [POS[0],POS[2],POS[2],POS[0],POS[0]]
  BY = [POS[1],POS[1],POS[3],POS[3],POS[1]]
  IF KEYWORD_SET(ADD_BOARDER) THEN BOXI = POLYLINE(BX,BY,THICK=5,COLOR='BLACK',TARGET=IMG)

  
  CASE MP OF
    'MAB': BEGIN & DB_BKG = 'WHITE' & DB_POS=[0,0.95,1,1] & CB_POS=[POS[0]+0.02,POS[3]-.1,0.44,POS[3]-0.08] & TITLE_POS=[0.5,0.97] & TITLE_SIZE=14 & END
    'MAB_GS': BEGIN & DB_BKG = 'WHITE' & DB_POS=[0,0.95,1,1] & CB_POS = [0.02, 0.86, 0.4, 0.89]& TITLE_POS=[0.5,0.96] & TITLE_SIZE=12 & END
    ELSE:  BEGIN & DB_BKG = [] & DB_POS=[POS[0],POS[3],POS[2],0.99] & CB_POS=[POS[0]+0.035,POS[3]-.065,0.5,POS[3]-0.045] & TITLE_POS=[0.5,0.97] & SIZE=15 & END
  ENDCASE
  
  IF KEYWORD_SET(ADD_COLORBAR) THEN CBAR, PSCL, IMG=IMG, FONT_SIZE=MR.CB_SIZE, CB_TYPE=FIX(MR.CB_TYPE), CB_POS=CB_POS, CB_TITLE=CBTITLE, CB_TICKNAMES=CB_TICKNAMES, CB_TICKVALUES=CB_TICKVALUES, PAL=PAL, RELATIVE=CB_RELATIVE, CB_OBJ=CB_IMG
  IF KEYWORD_SET(ADD_DATEBAR) THEN DB = DATE_BAR(DATERANGE[0],DB_FONT_SIZE=18,DB_COLOR=DB_COLOR,DB_THICK=5,DB_POS=DB_POS,DB_BKG=DB_BKG, PAL=PAL)
  
  IF KEYWORD_SET(ADD_PIONEER) THEN SY = SYMBOL(X*XX,Y*XX,SYMBOL='CIRCLE',/DEVICE, /SYM_FILLED, SYM_COLOR=SCLR, SYM_SIZE=0.65, TARGET=IMG)
  IF KEYWORD_SET(ADD_POINTS) THEN BEGIN
    MAPS_SET, MP
    LL = MAP_DEG2IMAGE(MAPS_BLANK(MP),PLONS,PLATS,X=PX,Y=PY)
    ZWIN
    PSY = SYMBOL(PX*XX,PY*XX,SYMBOL=PSYM,/DEVICE, /SYM_FILLED, SYM_COLOR=PCOLOR, SYM_SIZE=PSIZE, TARGET=IMG)
  ENDIF

  IF KEYWORD_SET(ADD_LONLAT) THEN BEGIN
    LONNAMES = NUM2STR(LONS)
    LATNAMES = NUM2STR(LATS)
    CASE MP OF
      'NES': BEGIN
        LAT = FLOAT(WHERE_NEAREST(MLL.LATS[0,*],FLOAT(LATS),NEAR=0.05))*XX+[34,0,-34] & LATX = REPLICATE(PIXBL[1],N_ELEMENTS(LAT))
        LON = FLOAT(WHERE_NEAREST(MLL.LONS[*,0],FLOAT(LONS),NEAR=0.05))*YY+[39,13,-12,-38] & LONY = REPLICATE(PIXBL[0],N_ELEMENTS(LON))
        LATPOS = 'L' & LONPOS = 'B'
      END
      ELSE: BEGIN
        LAT = FLOAT(WHERE_NEAREST(MLL.LATS[0,*],FLOAT(LATS),NEAR=0.05))*XX & LATX = REPLICATE(0,N_ELEMENTS(LAT))
        LON = FLOAT(WHERE_NEAREST(MLL.LONS[*,0],FLOAT(LONS),NEAR=0.05))*YY & LONY = REPLICATE(0,N_ELEMENTS(LON))
        LATPOS = 'R' & LONPOS = 'T'
      END  
    ENDCASE    

    ; TODO Figure out the adjustment for the lon/lat tick labels for when the image is resized.  Currently the values are hard coded.
    LLAT = SYMBOL(LATX,LAT,'HLINE',/DEVICE,SYM_SIZE=2,SYM_COLOR='BLACK',SYM_THICK=2,/SYM_FILLED,/CURRENT,LABEL_STRING=LATNAMES,LABEL_FONT_SIZE=14,LABEL_POSITION=LATPOS,CLIP=0)
    LLON = SYMBOL(LON,LONY,'VLINE',/DEVICE,SYM_SIZE=2,SYM_COLOR='BLACK',SYM_THICK=2,/SYM_FILLED,/CURRENT,LABEL_STRING=LONNAMES,LABEL_FONT_SIZE=14,LABEL_POSITION=LONPOS,CLIP=0)
  ENDIF ; ADD_LONLAT
  
  IF KEYWORD_SET(ADD_TITLE) THEN TXT = TEXT(TITLE_POS[0],TITLE_POS[1],TITLE_TEXT,ALIGNMENT=0.50,FONT_SIZE=TITLE_SIZE)
  
  RETURN, IMG
  DONE:


END ; ***************** End of ILLEX_VIEWER_IMAGE *****************

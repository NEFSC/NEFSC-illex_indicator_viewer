; $ID:	ILLEX_WEEKLY_IMAGES_MAIN.PRO,	2022-05-05-11,	USER-KJWH	$
  PRO ILLEX_WEEKLY_MAIN, VERSION, RESOLUTION=RESOLUTION, BUFFER=BUFFER, VERBOSE=VERBOSE, OVERWRITE=OVERWRITE, $
                                DOWNLOAD_FILES=DOWNLOAD_FILES,$
                                PROCESS_FILES=PROCESS_FILES,$
                                RUN_STATS=RUN_STATS,$
                                MAKE_PNGS=MAKE_PNGS,$
                                YEARLY_DIF=YEARLY_DIF,$
                                ANOMALY=ANOMALY,$
                                MAKE_COMPOSITES=MAKE_COMPOSITES
                                
                                
    

;+
; NAME:
;   ILLEX_WEEKLY_IMAGES_MAIN
;
; PURPOSE:
;   Main program to create weekly images for the Illex indicators project
;
; PROJECT:
;   illex_indicator_viewer
;
; CALLING SEQUENCE:
;   ILLEX_WEEKLY_IMAGES_MAIN
;
; REQUIRED INPUTS:
;    
;
; OPTIONAL INPUTS:
;   VERSION........... The name of the version
;   OUTPUT_MAP........ The name of the output map used for making the images
;   RESOLUTION........ The output resolution of the images
;   DOWNLOAD_FILES....
;   PROCESS_FILES.....
;   RUN_STATS.........
;   MAKE_PNGS.........
;   YEARLY_DIF........
;   ANOMALY...........
;   MAKE_COMPOSITES...
;
; KEYWORD PARAMETERS:
;   BUFFER............ Buffer the plotting steps
;   VERBOSE...... Print steps
;   OVERWRITE.... Overwrite existing files
;
; OUTPUTS:
;   Images, composites, animations, etc. to be used for the Illex indicators project
;
; OPTIONAL OUTPUTS:
;   None
;
; COMMON BLOCKS: 
;   None
;
; SIDE EFFECTS:  
;   None
;
; RESTRICTIONS:  
;   None
;
; EXAMPLE:
; 
;
; NOTES:
;   $Citations or any other useful notes$
;   
; COPYRIGHT: 
; Copyright (C) 2022, Department of Commerce, National Oceanic and Atmospheric Administration, National Marine Fisheries Service,
;   Northeast Fisheries Science Center, Narragansett Laboratory.
;   This software may be used, copied, or redistributed as long as it is not sold and this copyright notice is reproduced on each copy made.
;   This routine is provided AS IS without any express or implied warranties whatsoever.
;
; AUTHOR:
;   This program was written on May 05, 2022 by Kimberly J. W. Hyde, Northeast Fisheries Science Center | NOAA Fisheries | U.S. Department of Commerce, 28 Tarzwell Dr, Narragansett, RI 02882
;    
; MODIFICATION HISTORY:
;   May 05, 2022 - KJWH: Initial code written
;-
; ****************************************************************************************************
  ROUTINE_NAME = 'ILLEX_WEEKLY_IMAGES_MAIN'
  COMPILE_OPT IDL2
  SL = PATH_SEP()
  
  DIR_PROJECT = !S.ILLEX_INDICATOR_VIEWER

  IF NONE(VERSION)    THEN VERSION = 'V2022'
  IF NONE(BUFFER)     THEN BUFFER  = 0
  IF NONE(VERBSOE)    THEN VERBOSE = 0
  IF NONE(RESOLUTION) THEN RESOLUTION = 300
  
  ; ===> Manually adjust the SOE program steps as needed
  IF ~N_ELEMENTS(DOWNLOAD_FILES)      THEN DOWNLOAD_FILES   = ''
  IF ~N_ELEMENTS(PROCESS_FILES)       THEN PROCESS_FILES    = ''
  IF ~N_ELEMENTS(MAKE_PNGS)           THEN MAKE_PNGS        = 'Y'
  IF ~N_ELEMENTS(JC_ANIMATION)        THEN JC_ANIMATION     = ''
  IF ~N_ELEMENTS(SST_ANIMATION)       THEN SST_ANIMATION    = ''
  IF ~N_ELEMENTS(YEARLY_DIF)          THEN YEARLY_DIF       = ''
  IF ~N_ELEMENTS(ANOMALY)             THEN ANOMALY          = ''
  IF ~N_ELEMENTS(MAKE_COMPOSITES)     THEN MAKE_COMPOSITES  = ''
  IF ~N_ELEMENTS(SUBAREA_EXTRACTS)    THEN SUBAREA_EXTRACTS = ''
  
  
  ; ===> Loop through versions
  FOR V=0, N_ELEMENTS(VERSION)-1 DO BEGIN
    VER = VERSION[V]
    VERSTR = ILLEX_WEEKLY_VERSION(VER)
    
    CANYONS = ['HUDSON_CANYON','WILMINGTON_CANYON','NORFOLK_CANYON']
    MAB_CANYONS = READ_SHPFILE('MAB_CANYONS',MAPP=VERSTR.INFO.MAP_OUT)
    CANYON_OUTLINES = []
    FOR M=0, N_ELEMENTS(CANYONS)-1 DO BEGIN
      OK = WHERE(TAG_NAMES(MAB_CANYONS) EQ CANYONS[M],/NULL)
      IF OK EQ [] THEN STOP
      CANYON_OUTLINES = [CANYON_OUTLINES,MAB_CANYONS.(OK).OUTLINE]
    ENDFOR
    OCOLOR = 250
    OTHICK = 3
    
    IF KEYWORD_SET(DOWNLOAD_FILES) THEN ILLEX_WEEKLY_DOWNLOADS, VERSTR
    
    IF KEYWORD_SET(PROCESS_FILES) THEN BEGIN ;ILLEX_WEEKLY_PROCESSING, VERSTR
      BATCH_L3, DO_GHRSST='Y[MUR;M=L3B2.L3B4]',DO_STATS='Y_2020_2022[MUR;PER=W.M]',DO_ANOMS='Y_2022[MUR;PER=WM]'
      BATCH_L3, DO_GLOBCOLOUR='Y',DO_MAKE_PRODS='Y_2020_2022[GLOBCOLOUR]',DO_ANOMS='Y_2022[GLOBCOLOUR;P=CHLOR_A-GSM;PER=WM]'
      BATCH_L3, DO_STATS='Y_2020_2022[GLOBCOLOUR;P=CHLOR_A-GSM;PER=W.M;M=L3B4]'
      BATCH_L3, DO_STATS='Y_2020_2022[GLOBCOLOUR;P=MICRO-TURNER;PER=M;M=L3B4]'
      BATCH_L3, DO_STATS='Y_2020_2022[GLOBCOLOUR;P=NANO-TURNER;PER=M;M=L3B4]'
      BATCH_L3, DO_STATS='Y_2020_2022[GLOBCOLOUR;P=PICO-TURNER;PER=M;M=L3B4]'
      BATCH_L3, DO_STATS='Y_2020_2022[GLOBCOLOUR;P=MICRO_PERCENTAGE-TURNER;PER=M;M=L3B4]'
      BATCH_L3, DO_STATS='Y_2020_2022[GLOBCOLOUR;P=NANO_PERCENTAGE-TURNER;PER=M;M=L3B4]'
      BATCH_L3, DO_STATS='Y_2020_2022[GLOBCOLOUR;P=PICO_PERCENTAGE-TURNER;PER=M;M=L3B4]'


   
   ; Set up steps to subset the MUR data before making the L3B2
   
    ;  BATCH_L3, DO_STATS='Y[MUR;PER=W.WEEK;M=L3B2]'
    ENDIF
    
    IF KEYWORD_SET(MAKE_PNGS) THEN BEGIN
      PIONEER = VERSTR.DIRS.DIR_FILES + 'PIONEER_ARRAY_COORDINATES.csv'
      PDATA = CSV_READ(PIONEER)
      MP = VERSTR.INFO.MAP_OUT
      MR = MAPS_READ(MP)
      IMG_DIMS  = FLOAT(STRSPLIT(MR.IMG_DIMS,';',/EXTRACT))*2
      
      XX = IMG_DIMS[0]/MR.PX & YY = IMG_DIMS[1]/MR.PY
      MAPS_SET, MP
      LL = MAP_DEG2IMAGE(MAPS_BLANK(MP),PDATA.LON,PDATA.LAT,X=X,Y=Y)
      ZWIN

      BUFFER = 1
      PRODS = VERSTR.INFO.PNG_PRODS
      TYPES = ['STATS','ANOMS']      
      
      FOR N=0, N_ELEMENTS(PRODS)-1 DO BEGIN
        PSTR = VERSTR.PROD_INFO.(N)
        DSET = PSTR.DATASET

        FOR T=0, N_ELEMENTS(TYPES)-1 DO BEGIN
          ATYPE = TYPES[T]
          FILES = GET_FILES(DSET,PRODS=PSTR.PROD,PERIOD='W',FILE_TYPE=ATYPE,DATERANGE='2022')
          FILES = REVERSE(FILES)
          DIR_OUT=VERSTR.DIRS.DIR_PNGS + PRODS[N] + SL + ATYPE + SL & DIR_TEST, DIR_OUT
  
          FOR F=0, N_ELEMENTS(FILES)-1 DO BEGIN
            FP = PARSE_IT(FILES[F],/ALL)
            PNGFILE = DIR_OUT + REPLACE(FP.NAME +'.PNG',FP.MAP,MP)
  
            IF ~FILE_MAKE(FILES[F],PNGFILE,OVERWRITE=OVERWRITE,VERBOSE=VERBOSE) THEN CONTINUE
  
            PER = PERIOD_2STRUCT(FP.PERIOD)
            TXT = 'Week ' + STRMID(PER.PERIOD,6,2) + ': ' + STRMID(PER.DATE_START,0,8) + ' - ' + STRMID(PER.DATE_END,0,8)
  
            CASE PRODS[N] OF
              'CHLOR_A': BEGIN  IF ATYPE EQ 'STATS' THEN SCLR = 'TOMATO' ELSE SCLR = 'NAVY' & PSCL = PSTR.PROD_SCALE & END
              'SST': BEGIN 
                IF ATYPE EQ 'STATS' THEN SCLR = 'YELLOW' ELSE SCLR = 'NAVY'
                CASE PER.MONTH_START OF
                  '01': PSCL = 'SST_0_30'
                  '02': PSCL = 'SST_0_30'
                  '03': PSCL = 'SST_0_30'
                  '04': PSCL = 'SST_5_30'
                  '05': PSCL = 'SST_5_30'
                  '06': PSCL = 'SST_10_30'
                  '07': PSCL = 'SST_10_30'
                  '08': PSCL = 'SST_15_30'
                  '09': PSCL = 'SST_15_30'
                  '10': PSCL = 'SST_10_30'
                  '11': PSCL = 'SST_5_30'
                  '12': PSCL = 'SST_5_30'
                ENDCASE
              END  
            ENDCASE
           
           PAL = PSTR.PAL
           CBTITLE = UNITS(PRODS[N])
           IF ATYPE EQ 'ANOMS' THEN BEGIN
             PSCL = PSTR.ANOM_SCALE
             PAL = PSTR.ANOM_PAL
             CBTITLE = PSTR.ANOM_TITLE
           ENDIF
  
            W = WINDOW(DIMENSIONS=IMG_DIMS,BUFFER=BUFFER)
            PRODS_2PNG, FILES[F],PAL=PAL, SPROD=PSCL, ADD_BATHY=200, CB_TITLE=CBTITLE, CB_SIZE=16, OBJ=IMG, LAYOUT=[2,2,1], OUTLINE=CANYON_OUTLINES,OUT_COLOR=OCOLOR,OUT_THICK=OTHICK,$
              DIR_OUT=DIR_OUT, MAPP=MP, /ADD_CB, ADD_TXT=TXT, TXT_ALIGN=0.50, TXT_POS=[0.275,0.96], TXT_SIZE=16, BUFFER=1, RESOLUTION=300, /CURRENT
            
            
            SY = SYMBOL(X*XX,Y*YY,SYMBOL='CIRCLE',/DEVICE, /SYM_FILLED, SYM_COLOR=SCLR, SYM_SIZE=0.65, TARGET=IMG)
  
            W.SAVE, PNGFILE, RESOLUTION=300
            W.CLOSE
          ENDFOR ; FILE TYPE  


        ENDFOR
      ENDFOR
    ENDIF ; MAKE_PNGS
    
    IF KEYWORD_SET(MAKE_COMPOSITES) THEN BEGIN
      PIONEER = VERSTR.DIRS.DIR_FILES + 'PIONEER_ARRAY_COORDINATES.csv'
      PDATA = CSV_READ(PIONEER)
      MP = VERSTR.INFO.MAP_OUT
      MR = MAPS_READ(MP)
      
      SP = 20
      LF = 30
      RT = 30
      TP = 60
      BT = 30
      
      MR_DIMS  = FLOAT(STRSPLIT(MR.IMG_DIMS,';',/EXTRACT))
      IMG_DIMS = [MR_DIMS[0]+LF+RT+SP,MR_DIMS[1]+TP+BT+SP]
      
      XX = MR_DIMS[0]/MR.PX & YY = MR_DIMS[1]/MR.PY
      MAPS_SET, MP
      LL = MAP_DEG2IMAGE(MAPS_BLANK(MP),PDATA.LON,PDATA.LAT,X=X,Y=Y)
      ZWIN

      BUFFER = 0
      PRODS = VERSTR.INFO.PNG_PRODS
      TYPES = ['STATS','ANOMS']
      
      WEEKS = 'W_2022' + ADD_STR_ZERO(INDGEN(51)+2)
      FOR W=0, N_ELEMENTS(WEEKS)-1 DO BEGIN
        WPER = PERIOD_2STRUCT(WEEKS[W])
        IF DATE_2JD(WPER.DATE_END) GT DATE_NOW(/JD) THEN CONTINUE
        DR = [WPER.DATE_START,WPER.DATE_END]
        
        

        FOR N=0, N_ELEMENTS(PRODS)-1 DO BEGIN
          PSTR = VERSTR.PROD_INFO.(N)
          DSET = PSTR.DATASET

          FOR T=0, N_ELEMENTS(TYPES)-1 DO BEGIN
            ATYPE = TYPES[T]
            FILES = GET_FILES(DSET,PRODS=PSTR.PROD,PERIOD='W',FILE_TYPE=ATYPE)
            FILES = REVERSE(FILES)
            DIR_OUT=VERSTR.DIRS.DIR_PNGS + PRODS[N] + SL + ATYPE + SL & DIR_TEST, DIR_OUT

            FOR F=0, N_ELEMENTS(FILES)-1 DO BEGIN
              FP = PARSE_IT(FILES[F],/ALL)
              PNGFILE = DIR_OUT + REPLACE(FP.NAME +'.PNG',FP.MAP,MP)

              IF ~FILE_MAKE(FILES[F],PNGFILE,OVERWRITE=OVERWRITE,VERBOSE=VERBOSE) THEN CONTINUE

              PER = PERIOD_2STRUCT(FP.PERIOD)
              TXT = 'Week ' + STRMID(PER.PERIOD,6,2) + ': ' + STRMID(PER.DATE_START,0,8) + ' - ' + STRMID(PER.DATE_END,0,8)

              CASE PRODS[N] OF
                'CHLOR_A': BEGIN  IF ATYPE EQ 'STATS' THEN SCLR = 'TOMATO' ELSE SCLR = 'NAVY' & PSCL = PSTR.PROD_SCALE & END
                'SST': BEGIN
                  IF ATYPE EQ 'STATS' THEN SCLR = 'YELLOW' ELSE SCLR = 'NAVY'
                  CASE PER.MONTH_START OF
                    '01': PSCL = 'SST_0_30'
                    '02': PSCL = 'SST_0_30'
                    '03': PSCL = 'SST_0_30'
                    '04': PSCL = 'SST_5_30'
                    '05': PSCL = 'SST_5_30'
                    '06': PSCL = 'SST_10_30'
                    '07': PSCL = 'SST_10_30'
                    '08': PSCL = 'SST_15_30'
                    '09': PSCL = 'SST_15_30'
                    '10': PSCL = 'SST_10_30'
                    '11': PSCL = 'SST_5_30'
                    '12': PSCL = 'SST_5_30'
                  ENDCASE
                END
              ENDCASE

              PAL = PSTR.PAL
              CBTITLE = UNITS(PRODS[N])
              IF ATYPE EQ 'ANOMS' THEN BEGIN
                PSCL = PSTR.ANOM_SCALE
                PAL = PSTR.ANOM_PAL
                CBTITLE = PSTR.ANOM_TITLE
              ENDIF

              W = WINDOW(DIMENSIONS=IMG_DIMS,BUFFER=BUFFER)
              PRODS_2PNG, FILES[F],PAL=PAL, SPROD=PSCL, ADD_BATHY=200, CB_TITLE=CBTITLE, OBJ=IMG, LAYOUT=[2,2,1], $
                DIR_OUT=DIR_OUT, MAPP=MP, /ADD_CB, ADD_TXT=TXT, TXT_ALIGN=0.50, TXT_POS=[0.275,0.96], BUFFER=1, RESOLUTION=300, /CURRENT


              SY = SYMBOL(X*XX,Y*YY,SYMBOL='CIRCLE',/DEVICE, /SYM_FILLED, SYM_COLOR=SCLR, SYM_SIZE=0.65, TARGET=IMG)
stop
              W.SAVE, PNGFILE, RESOLUTION=300
              W.CLOSE
            ENDFOR ; FILE TYPE
ENDFOR

          ENDFOR
        ENDFOR
      ENDIF ; COMPOSITE
      
      
    IF KEYWORD_SET(JC_ANIMATION) THEN BEGIN
      
      DIR_JC = VERSTR.DIRS.DIR_PROJECT + 'images' + SL + 'jc_charts' + SL
      FILES = FILE_SEARCH(DIR_JC + 'jc_2022*.png')
      MFILE = VERSTR.DIRS.DIR_ANIMATIONS + '2022-JENIFER_CLARK_CHARTS'
      EXT = ['webm'] ; 'mov','mp4',
;      FOR E=0, N_ELEMENTS(EXT)-1 DO BEGIN
;        FPS = 5
;        MOVIE_FILE = MFILE + '-FPS_'+ROUNDS(FPS)+'.'+EXT[E]
;        IF FILE_MAKE(FILES,MOVIE_FILE,OVERWRITE=OVERWRITE) EQ 0 THEN CONTINUE
;        MAKE_MOVIE, FILES, MOVIE_FILE=MOVIE_FILE, FRAME_SEC=FPS
;      ENDFOR
      
      FOR F=0, N_ELEMENTS(FILES)-1 DO BEGIN
        IMG = READ_IMAGE(FILES[F])
        PRINT, SIZE(IMG)
      ENDFOR
      
     STOP 
    ENDIF  
    
    IF KEYWORD_SET(SST_ANIMATION) THEN BEGIN
      PIONEER = VERSTR.DIRS.DIR_FILES + 'PIONEER_ARRAY_COORDINATES.csv'
      PDATA = CSV_READ(PIONEER)
      MP = VERSTR.INFO.MAP_OUT
      MR = MAPS_READ(MP)
      IMG_DIMS  = FLOAT(STRSPLIT(MR.IMG_DIMS,';',/EXTRACT))
      XX = IMG_DIMS[0]/MR.PX & YY = IMG_DIMS[1]/MR.PY
      MAPS_SET, MP
      LL = MAP_DEG2IMAGE(MAPS_BLANK(MP),PDATA.LON,PDATA.LAT,X=X,Y=Y)
      ZWIN
   
      DP = DATE_PARSE(DATE_NOW())
      START_DATE = JD_2DATE(JD_ADD(DP.JD,-14,/DAY))
      PRODS = 'SST'
      BUFFER = 1
      FOR N=0, N_ELEMENTS(PRODS)-1 DO BEGIN
        PSTR = VERSTR.PROD_INFO.(WHERE(TAG_NAMES(VERSTR.PROD_INFO) EQ PRODS[N]))
        DSET = PSTR.DATASET
        
        FILES = GET_FILES(DSET,PRODS=PSTR.PROD,PERIOD='D');,DATERANGE=[START_DATE,DP.DATE])
        FILES = REVERSE(FILES) 
        DIR_OUT=VERSTR.DIRS.DIR_ANIMATIONS + PRODS[N] + SL + 'ANIMATION_PNGS' + SL & DIR_TEST, DIR_OUT
        DIR_GIF=VERSTR.DIRS.DIR_ANIMATIONS + PRODS[N] + SL + 'ANIMATION_GIFS' + SL & DIR_TEST, DIR_GIF
        
        PSCL = PSTR.PROD_SCALE
        CASE PRODS[N] OF
          'CHLOR_A': SCLR = 'TOMATO'
          'SST': BEGIN
            SCLR = 'YELLOW'
            CASE DP.MONTH OF
              '01': PSCL = 'SST_0_30'
              '02': PSCL = 'SST_0_30'
              '03': PSCL = 'SST_0_30'
              '04': PSCL = 'SST_5_30'
              '05': PSCL = 'SST_5_30'
              '06': PSCL = 'SST_10_30'
              '07': PSCL = 'SST_10_30'
              '08': PSCL = 'SST_15_30'
              '09': PSCL = 'SST_15_30'
              '10': PSCL = 'SST_10_30'
              '11': PSCL = 'SST_5_30'
              '12': PSCL = 'SST_5_30'
            ENDCASE
          END  
        ENDCASE

TPALS = ['pal_panoply']
FOR T=0, N_ELEMENTS(TPALS)-1 DO BEGIN
  TPAL = TPALS[T]
MDATES = [13,30]
FOR M=0, N_ELEMENTS(MDATES)-1 DO BEGIN
  MDATE = MDATES[M]       
        FOR F=0, N_ELEMENTS(FILES)-1 DO BEGIN
          FP = PARSE_IT(FILES[F],/ALL)

          PNGFILE = DIR_OUT + REPLACE(FP.NAME + '-'+TPAL+'.PNG',FP.MAP,MP)
  ;        GFILE   = DIR_GIF + REPLACE(FP.NAME +'.gif',FP.MAP,MP)
          
          IF ~FILE_MAKE(FILES[F],[PNGFILE],OVERWRITE=OVERWRITE,VERBOSE=VERBOSE) THEN CONTINUE
 
 
          W = WINDOW(DIMENSIONS=IMG_DIMS,BUFFER=BUFFER)
          PRODS_2PNG, FILES[F],PAL=TPAL, SPROD=PSCL, ADD_BATHY=200,$
            DIR_OUT=DIR_OUT, MAPP=MP, /ADD_CB, /ADD_DB, ADD_TXT=TXT, TXT_ALIGN=0.50, TXT_POS=[0.275,0.96], BUFFER=1, RESOLUTION=300, /CURRENT
          SY = SYMBOL(X*XX,Y*YY,SYMBOL='CIRCLE',/DEVICE, /SYM_FILLED, SYM_COLOR=SCLR, SYM_SIZE=0.65)
          
          W.SAVE, PNGFILE, RESOLUTION=300
   ;       W.SAVE, GFILE, RESOLUTION=300
          W.CLOSE
        ENDFOR
        
        WEEKS = 'W_2022' + ADD_STR_ZERO(INDGEN(51)+2)
        FOR W=0, N_ELEMENTS(WEEKS)-1 DO BEGIN
          WPER = PERIOD_2STRUCT(WEEKS[W])
          IF DATE_2JD(WPER.DATE_END) GT DATE_NOW(/JD) THEN CONTINUE
          DR = [JD_2DATE(JD_ADD(DATE_2JD(WPER.DATE_END),-MDATE,/DAY)),WPER.DATE_END]
          PNGS = FILE_SEARCH(DIR_OUT + 'D_*'+tpal+'.PNG')
          PNGS = DATE_SELECT(PNGS,DR)
          IF PNGS EQ [] THEN CONTINUE
          FP = PARSE_IT(PNGS[0])
          
          MFILE = VERSTR.DIRS.DIR_ANIMATIONS + PRODS[N] + SL + REPLACE(FP.NAME,FP.PERIOD,'DD_'+STRJOIN(STRMID(DR,0,8),'_'))
          EXT = ['webm'] ; 'mov','mp4',
          FOR E=0, N_ELEMENTS(EXT)-1 DO BEGIN
            FPS = 5
            MOVIE_FILE = MFILE + '-FPS_'+ROUNDS(FPS)+'-'+tpal+'.'+EXT[E]
            IF FILE_MAKE(PNGS,MOVIE_FILE,OVERWRITE=OVERWRITE) EQ 0 THEN CONTINUE
            MAKE_MOVIE, PNGS, MOVIE_FILE=MOVIE_FILE, FRAME_SEC=FPS
          ENDFOR  
          
;          GIFS = FILE_SEARCH(DIR_GIF + 'D_*.gif')
;          GIFS = DATE_SELECT(GIFS,DR)
;          IF GIFS EQ [] THEN CONTINUE
;          FP = PARSE_IT(GIFS[0])          
;          GIF_FILE = VERSTR.DIRS.DIR_ANIMATIONS + PRODS[N] + SL + REPLACE(FP.NAME,FP.PERIOD,'DD_'+STRJOIN(STRMID(DR,0,8),'_')) + '.gif'
;          DIR_TEMP = VERSTR.DIRS.DIR_ANIMATIONS + PRODS[N] + SL + 'TEMP' + SL & DIR_TEST, DIR_TEMP
;          
;          IF FILE_MAKE(GIFS,GIF_FILE,OVERWRITE=OVERWRITE) EQ 0 THEN CONTINUE
;          FILE_COPY, GIFS, DIR_TEMP, /OVERWRITE
;          CD, CURRENT=CT
;          CD, DIR_TEMP
;          IF EXISTS(GIF_FILE) THEN FILE_DELETE, GIF_FILE
;          CMD = 'gifsicle --delay=5 --loop '+'*.gif>'+ GIF_FILE + ' --colors 256'
;          SPAWN, CMD, LOG, ERR
;          CD, CT
;          FILE_DELETE, FILE_SEARCH(DIR_TEMP + '*.gif')
                 
        ENDFOR
 ENDFOR ; MDATES   
ENDFOR ; TPALS     
        
      ENDFOR
    ENDIF ; SST_ANIMATION
    
    
    IF KEYWORD_SET(SUBAREA_EXTRACTS) THEN ILLEX_SUBAREA_EXTRACT, VERSTR, PRODUCTS='PHYSIZE',PERIOD=['M','MONTH']
    
    
    DT = '20210608' & TITLE='2021-06-08'
    F = GET_FILES('MUR',PRODS='SST',DATERANGE=[DT,DT])
    PNGFILE = VERSTR.DIRS.DIR_PNGS + 'D_'+DT+'-MUR-SST-WCR.PNG'
    OPROD = 'SST_10_30'
    PAL = VERSTR.PROD_INFO.SST.PAL
    OVERWRITE = 0
    IF FILE_MAKE(F,PNGFILE,OVERWRITE=OVERWRITE) EQ 1 THEN BEGIN

      PIONEER = VERSTR.DIRS.DIR_FILES + 'PIONEER_ARRAY_COORDINATES.csv'
      PDATA = CSV_READ(PIONEER)
      MP = 'NWA'
      MR = MAPS_READ(MP)
      IMG_DIMS  = FLOAT(STRSPLIT(MR.IMG_DIMS,';',/EXTRACT))
      XX = IMG_DIMS[0]/MR.PX & YY = IMG_DIMS[1]/MR.PY
      MAPS_SET, MP
      LL = MAP_DEG2IMAGE(MAPS_BLANK(MP),PDATA.LON,PDATA.LAT,X=X,Y=Y)
      ZWIN


      ;    W = WINDOW(DIMENSIONS=IMG_DIMS,/BUFFER)
      PRODS_2PNG, F, PROD=OPROD, MAPP='NWA', CROP=[150,1200,600,1250], /CURRENT, OBJ=IMG, ADD_BATHY=200, C_LEVELS=[20,24], C_COLOR=249, C_THICK=2, C_ANNOTATION=[' ',' ']
      TD = TEXT(0.22,0.965, TITLE, FONT_SIZE=20, FONT_STYLE='BOLD', FONT_COLOR='BLACK', ALIGNMENT=0.5)
      E1 = ELLIPSE(.22,.27,MAJOR=.025,MINOR=.048,THICK=6,COLOR='BLACK',TARGET=IMG,FILL_BACKGROUND=0)
      E2 = ELLIPSE(.28,.31,MAJOR=.025,MINOR=.048,THICK=6,COLOR='BLACK',TARGET=IMG,FILL_BACKGROUND=0)
      E3 = ELLIPSE(.40,.40,MAJOR=.050,MINOR=.095,THICK=6,COLOR='BLACK',TARGET=IMG,FILL_BACKGROUND=0)
      E4 = ELLIPSE(.48,.46,MAJOR=.028,MINOR=.057,THICK=6,COLOR='BLACK',TARGET=IMG,FILL_BACKGROUND=0)
      E5 = ELLIPSE(.59,.46,MAJOR=.072,MINOR=.114,THICK=6,COLOR='BLACK',TARGET=IMG,FILL_BACKGROUND=0)
      E6 = ELLIPSE(.64,.62,MAJOR=.025,MINOR=.035,THICK=6,COLOR='BLACK',TARGET=IMG,FILL_BACKGROUND=0)
      E7 = ELLIPSE(.70,.64,MAJOR=.025,MINOR=.035,THICK=6,COLOR='BLACK',TARGET=IMG,FILL_BACKGROUND=0)
      E8 = ELLIPSE(.78,.52,MAJOR=.040,MINOR=.084,THICK=6,COLOR='BLACK',TARGET=IMG,FILL_BACKGROUND=0,THETA=16)
      CBAR, OPROD, OBJ=IMG, FONT_SIZE=14, FONT_STYLE=FONT_STYLE, CB_TYPE=3, CB_POS=[0.02,0.92,0.46,0.96], CB_TITLE=UNITS('SST');, PAL=PAL


      SY = SYMBOL((X-150),(Y-600),SYMBOL='DIAMOND',/DEVICE, /SYM_FILLED, SYM_COLOR='DEEP_PINK', SYM_SIZE=0.85)

      A = TEXT(180,200,'Mid-Atlantic',FONT_SIZE=FSZ,FONT_STYLE='BOLD',COLOR=FC,/DEVICE,ORIENTATION=50) ; TM = TEXT(310,540,'MAB',FONT_SIZE=FSZ,FONT_STYLE='BOLD',COLOR=FC,/DEVICE)
      B = TEXT(350,350,'Southern!CNew England', FONT_SIZE=FSZ,FONT_STYLE='BOLD',COLOR=FC,/DEVICE,ALIGNMENT=0.5) ; TB = TEXT(650,650,'GB', FONT_SIZE=FSZ,FONT_STYLE='BOLD',COLOR=FC,/DEVICE)
      C = TEXT(480,380,'Georges!CBank', FONT_SIZE=FSZ,FONT_STYLE='BOLD',COLOR=FC,/DEVICE,ALIGNMENT=0.5) ; TB = TEXT(650,650,'GB', FONT_SIZE=FSZ,FONT_STYLE='BOLD',COLOR=FC,/DEVICE)
      D = TEXT(430,500,'Gulf of!CMaine',FONT_SIZE=FSZ,FONT_STYLE='BOLD',COLOR=FC,/DEVICE,ALIGNMENT=0.5) ; TM = TEXT(590,810,'GOM',FONT_SIZE=FSZ,FONT_STYLE='BOLD',COLOR=FC,/DEVICE)
      E = TEXT(220,80, 'Gulf Stream',FONT_SIZE=FSZ,FONT_STYLE='BOLD',COLOR=FC,/DEVICE,ORIENTATION=30) ; TM = TEXT(590,810,'GOM',FONT_SIZE=FSZ,FONT_STYLE='BOLD',COLOR=FC,/DEVICE)
      F = TEXT(310,240,'Slope !CSea',FONT_SIZE=FSZ,FONT_STYLE='BOLD',COLOR=FC,/DEVICE,ALIGNMENT=0.5) ; TM = TEXT(590,810,'GOM',FONT_SIZE=FSZ,FONT_STYLE='BOLD',COLOR=FC,/DEVICE)
      G = TEXT(625,285,'Warm Core !CRing',FONT_SIZE=FSZ,FONT_STYLE='BOLD',COLOR=FC,/DEVICE,ALIGNMENT=0.5)
      stop

      IMG.SAVE, PNGFILE
      IMG.CLOSE
    ENDIF
    
    
  ENDFOR  
  


END ; ***************** End of ILLEX_WEEKLY_IMAGES_MAIN *****************
